// Code generated by goctl. DO NOT EDIT!
// Source: comet_server.proto

package server

import (
	"context"

	"github.com/dllgo/comet_server/comet_server"
	"github.com/dllgo/comet_server/internal/logic"
	"github.com/dllgo/comet_server/internal/svc"
)

type CometServerServer struct {
	svcCtx *svc.ServiceContext
}

func NewCometServerServer(svcCtx *svc.ServiceContext) *CometServerServer {
	return &CometServerServer{
		svcCtx: svcCtx,
	}
}

func (s *CometServerServer) Send2User(ctx context.Context, in *comet_server.Input) (*comet_server.Output, error) {
	l := logic.NewSend2userLogic(ctx, s.svcCtx)
	return l.Send2User(in)
}

func (s *CometServerServer) Send2Friend(ctx context.Context, in *comet_server.Input) (*comet_server.Output, error) {
	l := logic.NewSend2friendLogic(ctx, s.svcCtx)
	return l.Send2Friend(in)
}

func (s *CometServerServer) Send2Group(ctx context.Context, in *comet_server.Input) (*comet_server.Output, error) {
	l := logic.NewSend2groupLogic(ctx, s.svcCtx)
	return l.Send2Group(in)
}

func (s *CometServerServer) Send2Room(ctx context.Context, in *comet_server.Input) (*comet_server.Output, error) {
	l := logic.NewSend2roomLogic(ctx, s.svcCtx)
	return l.Send2Room(in)
}

func (s *CometServerServer) Send2Push(ctx context.Context, in *comet_server.Input) (*comet_server.Output, error) {
	l := logic.NewSend2pushLogic(ctx, s.svcCtx)
	return l.Send2Push(in)
}
