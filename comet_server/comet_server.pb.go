// Code generated by protoc-gen-go. DO NOT EDIT.
// source: comet_server.proto

package comet_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	I                    string   `protobuf:"bytes,1,opt,name=I,proto3" json:"I,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Service              string   `protobuf:"bytes,3,opt,name=Service,proto3" json:"Service,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=Path,proto3" json:"Path,omitempty"`
	Version              uint32   `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	ST                   int64    `protobuf:"varint,6,opt,name=ST,proto3" json:"ST,omitempty"`
	Data                 []byte   `protobuf:"bytes,7,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_b912673fd82858c8, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *Request) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Request) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Request) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Request) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Request) GetST() int64 {
	if m != nil {
		return m.ST
	}
	return 0
}

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RequestAck struct {
	I                    string   `protobuf:"bytes,1,opt,name=I,proto3" json:"I,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	ST                   int64    `protobuf:"varint,3,opt,name=ST,proto3" json:"ST,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestAck) Reset()         { *m = RequestAck{} }
func (m *RequestAck) String() string { return proto.CompactTextString(m) }
func (*RequestAck) ProtoMessage()    {}
func (*RequestAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_b912673fd82858c8, []int{1}
}

func (m *RequestAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAck.Unmarshal(m, b)
}
func (m *RequestAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAck.Marshal(b, m, deterministic)
}
func (m *RequestAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAck.Merge(m, src)
}
func (m *RequestAck) XXX_Size() int {
	return xxx_messageInfo_RequestAck.Size(m)
}
func (m *RequestAck) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAck.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAck proto.InternalMessageInfo

func (m *RequestAck) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *RequestAck) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *RequestAck) GetST() int64 {
	if m != nil {
		return m.ST
	}
	return 0
}

type Response struct {
	I                    string   `protobuf:"bytes,1,opt,name=I,proto3" json:"I,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Service              string   `protobuf:"bytes,3,opt,name=Service,proto3" json:"Service,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=Path,proto3" json:"Path,omitempty"`
	Version              uint32   `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	ST                   int64    `protobuf:"varint,6,opt,name=ST,proto3" json:"ST,omitempty"`
	Code                 int64    `protobuf:"varint,7,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,8,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 []byte   `protobuf:"bytes,9,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_b912673fd82858c8, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *Response) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Response) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Response) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Response) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Response) GetST() int64 {
	if m != nil {
		return m.ST
	}
	return 0
}

func (m *Response) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResponseAck struct {
	I                    string   `protobuf:"bytes,1,opt,name=I,proto3" json:"I,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	ST                   int64    `protobuf:"varint,3,opt,name=ST,proto3" json:"ST,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseAck) Reset()         { *m = ResponseAck{} }
func (m *ResponseAck) String() string { return proto.CompactTextString(m) }
func (*ResponseAck) ProtoMessage()    {}
func (*ResponseAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_b912673fd82858c8, []int{3}
}

func (m *ResponseAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseAck.Unmarshal(m, b)
}
func (m *ResponseAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseAck.Marshal(b, m, deterministic)
}
func (m *ResponseAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseAck.Merge(m, src)
}
func (m *ResponseAck) XXX_Size() int {
	return xxx_messageInfo_ResponseAck.Size(m)
}
func (m *ResponseAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseAck.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseAck proto.InternalMessageInfo

func (m *ResponseAck) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *ResponseAck) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ResponseAck) GetST() int64 {
	if m != nil {
		return m.ST
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "comet_server.Request")
	proto.RegisterType((*RequestAck)(nil), "comet_server.RequestAck")
	proto.RegisterType((*Response)(nil), "comet_server.Response")
	proto.RegisterType((*ResponseAck)(nil), "comet_server.ResponseAck")
}

func init() { proto.RegisterFile("comet_server.proto", fileDescriptor_b912673fd82858c8) }

var fileDescriptor_b912673fd82858c8 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xc1, 0x4e, 0xbb, 0x40,
	0x10, 0xc6, 0xb3, 0xd0, 0x7f, 0x29, 0x53, 0xfe, 0x1e, 0x36, 0xd1, 0x6c, 0x3c, 0x11, 0x4e, 0x9c,
	0x7a, 0xa8, 0xb7, 0xd6, 0x8b, 0x29, 0x17, 0x0e, 0x26, 0x66, 0x69, 0xbc, 0x1a, 0x84, 0xb1, 0x25,
	0xa6, 0x2c, 0xee, 0x42, 0x5f, 0xc4, 0xe7, 0xf1, 0xe2, 0x93, 0x19, 0xa6, 0x60, 0xd0, 0x8b, 0xc1,
	0x8b, 0xb7, 0xf9, 0xbe, 0xf0, 0x1b, 0x66, 0xbe, 0xdd, 0x05, 0x9e, 0xa9, 0x03, 0xd6, 0x0f, 0x06,
	0xf5, 0x11, 0xf5, 0xa2, 0xd2, 0xaa, 0x56, 0xdc, 0x1b, 0x7a, 0xc1, 0x2b, 0x03, 0x47, 0xe2, 0x4b,
	0x83, 0xa6, 0xe6, 0x1e, 0xb0, 0x58, 0x30, 0x9f, 0x85, 0xae, 0x64, 0x31, 0x3f, 0x03, 0x2b, 0x8e,
	0x84, 0x45, 0xd2, 0x8a, 0x23, 0x2e, 0xc0, 0x49, 0x50, 0x1f, 0x8b, 0x0c, 0x85, 0x4d, 0x66, 0x2f,
	0x39, 0x87, 0xc9, 0x5d, 0x5a, 0xef, 0xc5, 0x84, 0x6c, 0xaa, 0xdb, 0xaf, 0xef, 0x51, 0x9b, 0x42,
	0x95, 0xe2, 0x9f, 0xcf, 0xc2, 0xff, 0xb2, 0x97, 0x6d, 0xdf, 0x64, 0x2b, 0xa6, 0x3e, 0x0b, 0x6d,
	0x69, 0x25, 0xdb, 0x96, 0x8e, 0xd2, 0x3a, 0x15, 0x8e, 0xcf, 0x42, 0x4f, 0x52, 0x1d, 0xac, 0x00,
	0xba, 0xa1, 0x6e, 0xb2, 0xe7, 0x1f, 0xe6, 0x3a, 0xf5, 0xb3, 0xfb, 0x7e, 0xc1, 0x3b, 0x83, 0x99,
	0x44, 0x53, 0xa9, 0xd2, 0xe0, 0xdf, 0xad, 0xb4, 0x51, 0x39, 0xd2, 0x4a, 0xb6, 0xa4, 0xba, 0xa5,
	0x6f, 0xd1, 0x98, 0x74, 0x87, 0x62, 0x76, 0xfa, 0x57, 0x27, 0x3f, 0x03, 0x70, 0x07, 0x01, 0xac,
	0x61, 0xde, 0xef, 0x30, 0x3a, 0x81, 0xe5, 0x9b, 0x05, 0xde, 0x66, 0x70, 0xc8, 0x7c, 0x05, 0xae,
	0xc1, 0x32, 0x5f, 0x36, 0x06, 0x35, 0x3f, 0x5f, 0x7c, 0xb9, 0x14, 0x5d, 0xce, 0x97, 0x17, 0xdf,
	0xed, 0x2e, 0xc1, 0x6b, 0x98, 0x13, 0xfb, 0xa4, 0x0b, 0x2c, 0xf3, 0xb1, 0xf4, 0x1a, 0x80, 0xe8,
	0x9d, 0x56, 0x4d, 0x35, 0x16, 0xee, 0xc7, 0xd6, 0x4a, 0x1d, 0x7e, 0xcb, 0x56, 0x8d, 0xd9, 0x8f,
	0x64, 0x1f, 0xa7, 0xf4, 0x50, 0xae, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xca, 0x69, 0x18, 0x4d,
	0x3e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CometServerClient is the client API for CometServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CometServerClient interface {
	Send2User(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Send2Friend(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Send2Group(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Send2Room(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Send2Push(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type cometServerClient struct {
	cc *grpc.ClientConn
}

func NewCometServerClient(cc *grpc.ClientConn) CometServerClient {
	return &cometServerClient{cc}
}

func (c *cometServerClient) Send2User(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/comet_server.Comet_server/send2user", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cometServerClient) Send2Friend(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/comet_server.Comet_server/send2friend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cometServerClient) Send2Group(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/comet_server.Comet_server/send2group", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cometServerClient) Send2Room(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/comet_server.Comet_server/send2room", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cometServerClient) Send2Push(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/comet_server.Comet_server/send2push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CometServerServer is the server API for CometServer service.
type CometServerServer interface {
	Send2User(context.Context, *Request) (*Response, error)
	Send2Friend(context.Context, *Request) (*Response, error)
	Send2Group(context.Context, *Request) (*Response, error)
	Send2Room(context.Context, *Request) (*Response, error)
	Send2Push(context.Context, *Request) (*Response, error)
}

func RegisterCometServerServer(s *grpc.Server, srv CometServerServer) {
	s.RegisterService(&_CometServer_serviceDesc, srv)
}

func _CometServer_Send2User_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CometServerServer).Send2User(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comet_server.Comet_server/Send2User",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CometServerServer).Send2User(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CometServer_Send2Friend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CometServerServer).Send2Friend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comet_server.Comet_server/Send2Friend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CometServerServer).Send2Friend(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CometServer_Send2Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CometServerServer).Send2Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comet_server.Comet_server/Send2Group",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CometServerServer).Send2Group(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CometServer_Send2Room_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CometServerServer).Send2Room(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comet_server.Comet_server/Send2Room",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CometServerServer).Send2Room(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CometServer_Send2Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CometServerServer).Send2Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comet_server.Comet_server/Send2Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CometServerServer).Send2Push(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _CometServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comet_server.Comet_server",
	HandlerType: (*CometServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "send2user",
			Handler:    _CometServer_Send2User_Handler,
		},
		{
			MethodName: "send2friend",
			Handler:    _CometServer_Send2Friend_Handler,
		},
		{
			MethodName: "send2group",
			Handler:    _CometServer_Send2Group_Handler,
		},
		{
			MethodName: "send2room",
			Handler:    _CometServer_Send2Room_Handler,
		},
		{
			MethodName: "send2push",
			Handler:    _CometServer_Send2Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "comet_server.proto",
}
